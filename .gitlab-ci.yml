image: test.makerforce.io:8443/build-images/ubuntu-nodejs:master

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker info
  - git submodule init
  - git submodule update

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build:
  stage: build
  script:
    - echo "Fetching dependencies..."
    - npm install
    - echo "Building assets..."
    - node node_modules/grunt-cli/bin/grunt
    - echo "Building container..."
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy_staging:
  stage: deploy
  variables:
    NAME: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_ENVIRONMENT_NAME
    DOMAIN: staging.thepool.test.makerforce.io
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh deploy@test.makerforce.io "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY; sudo /srv/bin/deploy $NAME $DOMAIN $IMAGE_TAG"
  environment:
    name: staging
    url: https://$DOMAIN
  only:
    - master

deploy_production:
  stage: deploy
  variables:
    NAME: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_ENVIRONMENT_NAME
    DOMAIN: thepool.test.makerforce.io
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh deploy@test.makerforce.io "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY; sudo /srv/bin/deploy $NAME $DOMAIN $IMAGE_TAG"
  environment:
    name: production
    url: https://$DOMAIN
  when: manual
  only:
    - master
